#pragma checksum "C:\Users\Hasan Hasanbayli\Desktop\Chat\Chat\Views\Shared\_Layout.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "328e49ff40bafe312dd9c54d8fcb15e043c255a6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Shared__Layout), @"mvc.1.0.view", @"/Views/Shared/_Layout.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 2 "C:\Users\Hasan Hasanbayli\Desktop\Chat\Chat\Views\_ViewImports.cshtml"
using Chat.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Hasan Hasanbayli\Desktop\Chat\Chat\Views\_ViewImports.cshtml"
using Chat.ViewModels;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"328e49ff40bafe312dd9c54d8fcb15e043c255a6", @"/Views/Shared/_Layout.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ea9095843343c70b187561ea2b7dc4966bbfeebc", @"/Views/_ViewImports.cshtml")]
    public class Views_Shared__Layout : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/webfonts/inter/inter.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/css/app.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("nav-link p-0 py-xl-3 active"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Chats"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("nav-link p-0 py-xl-3 "), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Calls", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Calls"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("nav-link p-0 py-xl-3"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Friends", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Friends"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Profile", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("title", new global::Microsoft.AspNetCore.Html.HtmlString("Profile"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_16 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline w-100 p-2 border-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_17 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-inline w-100 px-2 pb-2 border-bottom"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_18 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_19 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_20 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_21 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/vendors/jquery/jquery-3.5.0.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_22 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/vendors/bootstrap/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_23 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/vendors/magnific-popup/jquery.magnific-popup.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_24 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/vendors/svg-inject/svg-inject.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_25 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/vendors/modal-stepes/modal-steps.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_26 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a613310", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <!-- Viewport-->
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0, shrink-to-fit=no"" />
    <!-- SEO Meta Tags-->
    <meta name=""keywords"" content=""quicky, chat, messenger, conversation, social, communication"" />
    <meta name=""description""
          content=""Quicky is a Bootstrap based modern and fully responsive Messaging template to help build Messaging or Chat application fast and easy."" />
    <meta name=""subject"" content=""communication"">
    <meta name=""copyright"" content=""frontendmatters"">
    <meta name=""revised"" content=""Sunday, July 18th, 2010, 5:15 pm"" />
    <title>Quicky - HTML Chat Template</title>
    <!-- Favicon and Touch Icons-->
");
                WriteLiteral("    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\r\n    <meta name=\"theme-color\" content=\"#ffffff\">\r\n\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "328e49ff40bafe312dd9c54d8fcb15e043c255a614484", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "328e49ff40bafe312dd9c54d8fcb15e043c255a615664", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a617552", async() => {
                WriteLiteral(@"

    <!-- Main Layout Start -->
    <div class=""main-layout"">
        <!-- Navigation Start -->
        <div class=""navigation navbar navbar-light bg-primary"">
            <!-- Logo Start -->
            <a class=""d-none d-xl-block bg-light rounded p-1"" href=""../index.html"">
                <!-- Default :: Inline SVG -->
                <svg height=""30"" width=""30"" viewBox=""0 0 512 511"">
                    <g>
                        <path d=""m120.65625 512.476562c-7.25 0-14.445312-2.023437-20.761719-6.007812-10.929687-6.902344-17.703125-18.734375-18.117187-31.660156l-1.261719-41.390625c-51.90625-46.542969-80.515625-111.890625-80.515625-183.992188 0-68.816406 26.378906-132.101562 74.269531-178.199219 47.390625-45.609374 111.929688-70.726562 181.730469-70.726562s134.339844 25.117188 181.730469 70.726562c47.890625 46.097657 74.269531 109.382813 74.269531 178.199219 0 68.8125-26.378906 132.097657-74.269531 178.195313-47.390625 45.609375-111.929688 70.730468-181.730469 70.730468-25.164062 0-49.789062-");
                WriteLiteral(@"3.253906-73.195312-9.667968l-46.464844 20.5c-5.035156 2.207031-10.371094 3.292968-15.683594 3.292968zm135.34375-471.976562c-123.140625 0-216 89.816406-216 208.925781 0 60.667969 23.957031 115.511719 67.457031 154.425781 8.023438 7.226563 12.628907 17.015626 13.015625 27.609376l.003906.125 1.234376 40.332031 45.300781-19.988281c8.15625-3.589844 17.355469-4.28125 25.921875-1.945313 20.132812 5.554687 41.332031 8.363281 63.066406 8.363281 123.140625 0 216-89.816406 216-208.921875 0-119.109375-92.859375-208.925781-216-208.925781zm-125.863281 290.628906 74.746093-57.628906c5.050782-3.789062 12.003907-3.839844 17.101563-.046875l55.308594 42.992187c16.578125 12.371094 40.304687 8.007813 51.355469-9.433593l69.519531-110.242188c6.714843-10.523437-6.335938-22.417969-16.292969-14.882812l-74.710938 56.613281c-5.050781 3.792969-12.003906 3.839844-17.101562.046875l-55.308594-41.988281c-16.578125-12.371094-40.304687-8.011719-51.355468 9.429687l-69.554688 110.253907c-6.714844 10.523437 6.335938 22.421874 16.292969 14.886718z");
                WriteLiteral(@"m0 0""
                              data-original=""#000000"" class=""active-path"" data-old_color=""#000000"" fill=""#665dfe"" />
                    </g>
                </svg>

                <!-- Alternate :: External File link -->
                <!-- <img class=""injectable"" src=""./../assets/media/logo.svg"" alt=""""> -->
            </a>
            <!-- Logo End -->
            <!-- Main Nav Start -->
            <ul class=""nav nav-minimal flex-row flex-grow-1 justify-content-between flex-xl-column justify-content-xl-center""
                 role=""tablist"">

                <!-- Chats Tab Start -->
                <li class=""nav-item"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a620640", async() => {
                    WriteLiteral(@"
                        <!-- Default :: Inline SVG -->
                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                  d=""M17 8h2a2 2 0 012 2v6a2 2 0 01-2 2h-2v4l-4-4H9a1.994 1.994 0 01-1.414-.586m0 0L11 14h4a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2v4l.586-.586z"" />
                        </svg>

                        <!-- Alternate :: External File link -->
                        <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/chat-alt-2.svg"" alt=""Chat icon""> -->
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </li>\r\n                <!-- Chats Tab End -->\r\n                <!-- Calls Tab Start -->\r\n                <li class=\"nav-item\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a623153", async() => {
                    WriteLiteral(@"
                        <!-- Default :: Inline SVG -->
                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                  d=""M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"" />
                        </svg>

                        <!-- Alternate :: External File link -->
                        <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/phone.svg"" alt=""Phone icon""> -->
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_8.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </li>\r\n                <!-- Calls Tab End -->\r\n                <!-- Friends Tab Start -->\r\n                <li class=\"nav-item\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a625720", async() => {
                    WriteLiteral(@"
                        <!-- Default :: Inline SVG -->
                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                  d=""M12 4.354a4 4 0 110 5.292M15 21H3v-1a6 6 0 0112 0v1zm0 0h6v-1a6 6 0 00-9-5.197M13 7a4 4 0 11-8 0 4 4 0 018 0z"" />
                        </svg>

                        <!-- Alternate :: External File link -->
                        <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/users.svg"" alt=""Friends icon""> -->
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_11.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_11);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </li>\r\n                <!-- Friends Tab End -->\r\n                <!-- Profile Tab Start -->\r\n                <li class=\"nav-item\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a628191", async() => {
                    WriteLiteral(@"
                        <!-- Default :: Inline SVG -->
                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                  d=""M5.121 17.804A13.937 13.937 0 0112 16c2.5 0 4.847.655 6.879 1.804M15 10a3 3 0 11-6 0 3 3 0 016 0zm6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                        </svg>

                        <!-- Alternate :: External File link -->
                        <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/user-circle.svg"" alt=""Profile icon""> -->
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_13.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_13);
                __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </li>\r\n                <!-- Profile Tab End -->\r\n            </ul>\r\n            <!-- Main Nav End -->\r\n        </div>\r\n        <!-- Navigation End -->\r\n\r\n        ");
#nullable restore
#line 114 "C:\Users\Hasan Hasanbayli\Desktop\Chat\Chat\Views\Shared\_Layout.cshtml"
   Write(RenderBody());

#line default
#line hidden
#nullable disable
                WriteLiteral(@"

        <!-- App Add-ons Start -->
        <div class=""appbar"">
            <div class=""appbar-wrapper hide-scrollbar"">

                <!-- Chat Back Button (Visible only in Small Devices) -->
                <div class=""d-flex justify-content-center border-bottom w-100"">
                    <button class=""btn btn-secondary btn-icon m-0 btn-minimal btn-sm text-muted d-xl-none"" type=""button""
                            data-apps-close="""">
                        <!-- Default :: Inline SVG -->
                        <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                  d=""M10 19l-7-7m0 0l7-7m-7 7h18"" />
                        </svg>

                        <!-- Alternate :: External File link -->
                        <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/arrow-left.svg"" alt=""""> -->
               ");
                WriteLiteral(@"     </button>
                </div>


                <div class=""appbar-head"">
                    <!-- Default :: Inline SVG -->
                    <svg class=""hw-20"" fill=""none"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                         viewBox=""0 0 24 24"" stroke=""currentColor"">
                        <path d=""M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z"">
                        </path>
                    </svg>

                    <!-- Alternate :: External File link -->
                    <!-- <img class=""hw-20"" src=""./../assets/media/heroicons/outline/view-grid.svg"" alt="""" class=""injectable hw-20""> -->
                    <h6 class=""mb-0 mt-1"">Apps</h6>
                </div>


                <!-- Appbar Nav Start -->
                ");
                WriteLiteral(@"<ul class=""nav nav-minimal appbar-nav"" id=""appNavTab"" role=""tablist"">
                    <li class=""nav-item"" role=""presentation"">
                        <a class=""nav-link"" id=""translator-tab"" data-toggle=""tab"" href=""#translator"" role=""tab""
                           aria-controls=""translator"" aria-selected=""true"">
                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/translate.svg"" alt=""""> -->

                            <svg xmlns=""http://www.w3.org/2000/svg"" height=""24"" width=""24"" fill=""none""
                                 viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                      d=""M3 5h12M9 3v2m1.048 9.5A18.022 18.022 0 016.412 9m6.088 9h7M11 21l5-10 5 10M12.751 5C11.783 10.77 8.07 15.61 3 18.129"" />
                            </svg>
                        </a>
                    </li>
                    <li c");
                WriteLiteral(@"lass=""nav-item"" role=""presentation"">
                        <a class=""nav-link"" id=""notes-tab"" data-toggle=""tab"" href=""#notes"" role=""tab""
                           aria-controls=""notes"" aria-selected=""false"">
                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/collection.svg"" alt=""""> -->
                            <svg xmlns=""http://www.w3.org/2000/svg"" height=""24"" width=""24"" fill=""none""
                                 viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                      d=""M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"" />
                            </svg>

                        </a>
                    </li>
                    <li class=""nav-item"" role=""presentation"">
                        <a class=""nav-");
                WriteLiteral(@"link"" id=""todo-tab"" data-toggle=""tab"" href=""#todo"" role=""tab"" aria-controls=""todo""
                           aria-selected=""false"">
                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/clipboard-check.svg"" alt=""""> -->
                            <svg xmlns=""http://www.w3.org/2000/svg"" height=""24"" width=""24"" fill=""none""
                                 viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                      d=""M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"" />
                            </svg>
                        </a>
                    </li>
                    <li class=""nav-item"" role=""presentation"">
                        <a class=""nav-link"" id=""quick-settings-tab"" data-toggle=""tab"" href=""#quick-settings"" role=""tab""
   ");
                WriteLiteral(@"                        aria-controls=""quick-settings"" aria-selected=""false"">
                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/cog.svg"" alt=""""> -->
                            <svg xmlns=""http://www.w3.org/2000/svg"" height=""24"" width=""24"" fill=""none""
                                 viewBox=""0 0 24 24"" stroke=""currentColor"">
                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                      d=""M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"" />
     ");
                WriteLiteral(@"                           <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                      d=""M15 12a3 3 0 11-6 0 3 3 0 016 0z"" />
                            </svg>
                        </a>
                    </li>
                </ul>
                <!-- Appbar Nav End -->
            </div>

            <!-- Tab panes -->
            <div class=""tab-content appnavbar-content"">
                <div class=""tab-pane h-100 active"" id=""app-welcome"" role=""tabpanel"">
                    <div class=""appnavbar-content-wrapper"">
                        <div class=""d-flex flex-column justify-content-center text-center h-100 w-100"">
                            <div class=""container"">
                                <div class=""avatar avatar-lg mb-2"">
                                    <img class=""avatar-img"" src=""../assets/media/avatar/4.png""");
                BeginWriteAttribute("alt", " alt=\"", 15035, "\"", 15041, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                </div>

                                <h5>Hey, Christina!</h5>
                                <p class=""text-muted"">Please select a app to Start using it.</p>

                            </div>
                        </div>
                    </div>
                </div>

                <div class=""tab-pane h-100"" id=""translator"" role=""tabpanel"" aria-labelledby=""translator-tab"">
                    <div class=""appnavbar-content-wrapper"">
                        <div class=""appnavbar-scrollable-wrapper"">
                            <div class=""appnavbar-heading sticky-top"">
                                <ul class=""nav justify-content-between align-items-center"">
                                    <!-- Sidebar Title Start -->
                                    <li class=""text-center"">
                                        <h5 class=""text-truncate mb-0"">Translator</h5>
                                    </li>
                                   ");
                WriteLiteral(@" <!-- Sidebar Title End -->
                                    <!-- Close Sidebar Start -->
                                    <li class=""nav-item list-inline-item"">
                                        <div data-appcontent-close="""">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-22"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                                      d=""M6 18L18 6M6 6l12 12""></path>
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/x.svg"" alt=""""> -->

                                        </div>
                                    </li>
      ");
                WriteLiteral(@"                              <!-- Close Sidebar End -->
                                </ul>
                            </div>

                            <div class=""appnavbar-body"">
                                <div class=""appnavbar-body-title"">
                                    <div class=""dropdown w-100"">
                                        <!-- Dropdown Button Start -->
                                        <button class=""btn btn-outline-default btn-block dropdown-toggle"" type=""button""
                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                aria-expanded=""false"">
                                            English
                                        </button>
                                        <!-- Dropdown Button End -->
                                        <!-- Dropdown Menu Start -->
                                        <div class=""dropdown-menu"">
                          ");
                WriteLiteral(@"                  <a class=""dropdown-item"" href=""#"">English</a>
                                            <a class=""dropdown-item"" href=""#"">Hindi</a>
                                            <a class=""dropdown-item"" href=""#"">Irish</a>
                                            <a class=""dropdown-item"" href=""#"">Latin</a>
                                            <a class=""dropdown-item"" href=""#"">Russian</a>
                                        </div>
                                        <!-- Dropdown Menu End -->
                                    </div>

                                    <img class=""injetable hw-16 text-muted mx-1""
                                         src=""../assets/media/heroicons/outline/arrow-right.svg""");
                BeginWriteAttribute("alt", " alt=\"", 18877, "\"", 18883, 0);
                EndWriteAttribute();
                WriteLiteral(@">

                                    <div class=""dropdown w-100"">
                                        <!-- Dropdown Button Start -->
                                        <button class=""btn btn-outline-default btn-block dropdown-toggle"" type=""button""
                                                data-toggle=""dropdown"" aria-haspopup=""true""
                                                aria-expanded=""false"">
                                            Latin
                                        </button>
                                        <!-- Dropdown Button End -->
                                        <!-- Dropdown Menu Start -->
                                        <div class=""dropdown-menu"">
                                            <a class=""dropdown-item"" href=""#"">English</a>
                                            <a class=""dropdown-item"" href=""#"">Hindi</a>
                                            <a class=""dropdown-item"" href=""#"">Irish</a>
               ");
                WriteLiteral(@"                             <a class=""dropdown-item"" href=""#"">Latin</a>
                                            <a class=""dropdown-item"" href=""#"">Russian</a>
                                        </div>
                                        <!-- Dropdown Menu End -->
                                    </div>
                                </div>

                                <div class=""translator-container p-2"">
                                    <div class=""form-group"">
                                        <textarea class=""form-control"" rows=""6"" placeholder=""Write text here...""
                                                  name=""description"">Rise and shine, buddy! It’s time to show this world who you are. I hope your morning is filled with peace and harmony, and you are ready to start your day. Hope that you’re starting it with a smile!</textarea>
                                    </div>

                                    <div class=""card"">
                           ");
                WriteLiteral(@"             <div class=""card-body"">
                                            <p class=""mb-0"">
                                                Et surge inluminare buddy! Aliquam quis es ut ostenderet hoc
                                                mundo. Utinam impleatur concordiam mane et dies incipere velis. Spes
                                                autem quae erant incipiens cum risu!
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""appnavbar-footer"">
                                <div class=""btn btn-primary btn-block"">Translate</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""tab-pane h-100"" id=""notes"" role=""tabpanel"" aria-labelledby=""notes-tab"">
                   ");
                WriteLiteral(@" <div class=""appnavbar-content-wrapper"">
                        <div class=""appnavbar-scrollable-wrapper"">
                            <div class=""appnavbar-heading sticky-top"">
                                <ul class=""nav justify-content-between align-items-center"">
                                    <!-- Sidebar Title Start -->
                                    <li class=""text-center"">
                                        <h5 class=""text-truncate mb-0"">Notes</h5>
                                    </li>
                                    <!-- Sidebar Title End -->
                                    <!-- Close Sidebar Start -->
                                    <li class=""nav-item list-inline-item"">
                                        <div data-appcontent-close="""">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-22"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                      ");
                WriteLiteral(@"                          <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                                      d=""M6 18L18 6M6 6l12 12""></path>
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/x.svg"" alt=""""> -->

                                        </div>
                                    </li>
                                    <!-- Close Sidebar End -->
                                </ul>
                            </div>

                            <div class=""appnavbar-body"">
                                <div class=""appnavbar-body-title"">
                                    <!-- Sidebar Header Dropdown Start -->
                                    <div class=""dropdown mr-2"">
                                        <!-- Dropdown Butt");
                WriteLiteral(@"on Start -->
                                        <button class=""btn btn-outline-default dropdown-toggle"" type=""button""
                                                data-notes-filter-list="""" data-toggle=""dropdown"" aria-haspopup=""true""
                                                aria-expanded=""false"">
                                            All Notes
                                        </button>
                                        <!-- Dropdown Button End -->
                                        <!-- Dropdown Menu Start -->
                                        <div class=""dropdown-menu"">
                                            <a class=""dropdown-item"" data-notes-filter="""" data-select=""all-chats""
                                               href=""#"">All Notes</a>
                                            <a class=""dropdown-item"" data-notes-filter="""" data-select=""friends""
                                               href=""#"">Personal</a>
                        ");
                WriteLiteral(@"                    <a class=""dropdown-item"" data-notes-filter="""" data-select=""groups""
                                               href=""#"">Work</a>
                                            <a class=""dropdown-item"" data-notes-filter="""" data-select=""unread""
                                               href=""#"">Favourite</a>
                                            <a class=""dropdown-item"" data-notes-filter="""" data-select=""archived""
                                               href=""#"">Important</a>
                                        </div>
                                        <!-- Dropdown Menu End -->
                                    </div>
                                    <!-- Sidebar Header Dropdown End -->
                                    <!-- Sidebar Search Start -->
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a650182", async() => {
                    WriteLiteral(@"
                                        <div class=""input-group"">
                                            <input type=""text""
                                                   class=""form-control search border-right-0 transparent-bg pr-0""
                                                   placeholder=""Search notes..."">
                                            <div class=""input-group-append"">
                                                <div class=""input-group-text transparent-bg border-left-0""
                                                     role=""button"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24""
                                                         stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                ");
                    WriteLiteral(@"              stroke-width=""2""
                                                              d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z""></path>
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/search.svg"" alt=""""> -->
                                                </div>
                                            </div>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <!-- Sidebar Search End -->
                                </div>

                                <div class=""note-container"">
                                    <div class=""note"">
                                        <div class=""note-body"">
                                            <div class=""note-added-on"">Sunday, 20/12/2020 at 12:26 PM</div>
                                            <h5 class=""note-title"">Metting with John Doe</h5>
                                            <p class=""note-description"">
                                                Lorem ipsum dolor sit amet consectetur
                                                adipisicing elit. Quis, dolorum odio vitae sapiente eius obcaecati.
                                            </p>
                                        </div>
                                        <div class=""note-footer"">
                                            <div class=""note-tools"">
              ");
                WriteLiteral(@"                                  <span class=""badge badge-info"">Personal</span>
                                            </div>
                                            <div class=""note-tools"">
                                                <div class=""dropdown"">
                                                    <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted""
                                                            type=""button"" data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                        <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                        <svg class=""hw-20"" xmlns=""http://www.w3.org/2000/svg""
                                                             height=""24"" width=""24"" fill=""none"" viewBox=""0 0 24 24""
                           ");
                WriteLiteral(@"                                  stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                                  stroke-width=""2""
                                                                  d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>

                                                    </button>
                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"">Personal</a>
                                                        <a class=""dropdown-item"" href=""#"">Work</a>
                                                        <a class=""dropdown-item"" href=""#"">Favourite</a>
                                     ");
                WriteLiteral(@"                   <a class=""dropdown-item"" href=""#"">Important</a>
                                                        <div class=""dropdown-divider""></div>
                                                        <a class=""dropdown-item text-danger"" href=""#"">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""note"">
                                        <div class=""note-body"">
                                            <div class=""note-added-on"">Sunday, 20/12/2020 at 12:26 PM</div>
                                            <h5 class=""note-title"">Metting with John Doe</h5>
                                            <p class=""note-description"">
                                                Lorem ipsum dolor sit amet consectetur");
                WriteLiteral(@"
                                                adipisicing elit. Quis, dolorum odio vitae sapiente eius obcaecati.
                                            </p>
                                        </div>
                                        <div class=""note-footer"">
                                            <div class=""note-tools"">
                                                <span class=""badge badge-danger"">Important</span>
                                            </div>
                                            <div class=""note-tools"">
                                                <div class=""dropdown"">
                                                    <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted""
                                                            type=""button"" data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                 ");
                WriteLiteral(@"       <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                        <svg class=""hw-20"" xmlns=""http://www.w3.org/2000/svg""
                                                             height=""24"" width=""24"" fill=""none"" viewBox=""0 0 24 24""
                                                             stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                                  stroke-width=""2""
                                                                  d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>
                                                    </button>
                                                    <div class=""dropdown-menu d");
                WriteLiteral(@"ropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"">Personal</a>
                                                        <a class=""dropdown-item"" href=""#"">Work</a>
                                                        <a class=""dropdown-item"" href=""#"">Favourite</a>
                                                        <a class=""dropdown-item"" href=""#"">Important</a>
                                                        <div class=""dropdown-divider""></div>
                                                        <a class=""dropdown-item text-danger"" href=""#"">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""note"">
                                        <div class=""note-body""");
                WriteLiteral(@">
                                            <div class=""note-added-on"">Sunday, 20/12/2020 at 12:26 PM</div>
                                            <h5 class=""note-title"">Metting with John Doe</h5>
                                            <p class=""note-description"">
                                                Lorem ipsum dolor sit amet consectetur
                                                adipisicing elit. Quis, dolorum odio vitae sapiente eius obcaecati.
                                            </p>
                                        </div>
                                        <div class=""note-footer"">
                                            <div class=""note-tools"">
                                                <span class=""badge badge-primary"">Favourite</span>
                                            </div>
                                            <div class=""note-tools"">
                                                <div class=""dropdown"">
         ");
                WriteLiteral(@"                                           <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted""
                                                            type=""button"" data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                        <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                        <svg class=""hw-20"" xmlns=""http://www.w3.org/2000/svg""
                                                             height=""24"" width=""24"" fill=""none"" viewBox=""0 0 24 24""
                                                             stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                                  stroke-width=""2""
                             ");
                WriteLiteral(@"                                     d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>
                                                    </button>
                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"">Personal</a>
                                                        <a class=""dropdown-item"" href=""#"">Work</a>
                                                        <a class=""dropdown-item"" href=""#"">Favourite</a>
                                                        <a class=""dropdown-item"" href=""#"">Important</a>
                                                        <div class=""dropdown-divider""></div>
                                                        <a class=""dropdown-item text-danger"" href=""#"">Delete</a>
           ");
                WriteLiteral(@"                                         </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class=""note"">
                                        <div class=""note-body"">
                                            <div class=""note-added-on"">Sunday, 20/12/2020 at 12:26 PM</div>
                                            <h5 class=""note-title"">Metting with John Doe</h5>
                                            <p class=""note-description"">
                                                Lorem ipsum dolor sit amet consectetur
                                                adipisicing elit. Quis, dolorum odio vitae sapiente eius obcaecati.
                                            </p>
                                        </div>
                                        <div class=""note-footer"">
    ");
                WriteLiteral(@"                                        <div class=""note-tools"">
                                                <span class=""badge badge-warning"">Work</span>
                                            </div>
                                            <div class=""note-tools"">
                                                <div class=""dropdown"">
                                                    <button class=""btn btn-secondary btn-icon btn-minimal btn-sm text-muted""
                                                            type=""button"" data-toggle=""dropdown"" aria-haspopup=""true""
                                                            aria-expanded=""false"">
                                                        <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/dots-vertical.svg"" alt=""""> -->
                                                        <svg class=""hw-20"" xmlns=""http://www.w3.org/2000/svg""
                                                             heig");
                WriteLiteral(@"ht=""24"" width=""24"" fill=""none"" viewBox=""0 0 24 24""
                                                             stroke=""currentColor"">
                                                            <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                                  stroke-width=""2""
                                                                  d=""M12 5v.01M12 12v.01M12 19v.01M12 6a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2zm0 7a1 1 0 110-2 1 1 0 010 2z"" />
                                                        </svg>
                                                    </button>
                                                    <div class=""dropdown-menu dropdown-menu-right"">
                                                        <a class=""dropdown-item"" href=""#"">Personal</a>
                                                        <a class=""dropdown-item"" href=""#"">Work</a>
                                                        <a class=");
                WriteLiteral(@"""dropdown-item"" href=""#"">Favourite</a>
                                                        <a class=""dropdown-item"" href=""#"">Important</a>
                                                        <div class=""dropdown-divider""></div>
                                                        <a class=""dropdown-item text-danger"" href=""#"">Delete</a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class=""appnavbar-footer"">
                                <div class=""btn btn-primary btn-block"" role=""button"" data-toggle=""modal""
                                     data-target=""#addNoteModal"">Add new note</div>
                            </div>
                        </div>
              ");
                WriteLiteral(@"      </div>
                </div>

                <div class=""tab-pane h-100"" id=""todo"" role=""tabpanel"" aria-labelledby=""todo-tab"">
                    <div class=""appnavbar-content-wrapper"">
                        <div class=""appnavbar-scrollable-wrapper"">
                            <div class=""appnavbar-heading sticky-top"">
                                <ul class=""nav justify-content-between align-items-center"">
                                    <!-- Sidebar Title Start -->
                                    <li class=""text-center"">
                                        <h5 class=""text-truncate mb-0"">To-do List</h5>
                                    </li>
                                    <!-- Sidebar Title End -->
                                    <!-- Close Sidebar Start -->
                                    <li class=""nav-item list-inline-item"">
                                        <div data-appcontent-close="""">
                                            <!-- Defau");
                WriteLiteral(@"lt :: Inline SVG -->
                                            <svg class=""hw-22"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                                      d=""M6 18L18 6M6 6l12 12""></path>
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/x.svg"" alt=""""> -->

                                        </div>
                                    </li>
                                    <!-- Close Sidebar End -->
                                </ul>
                            </div>

                            <div class=""appnavbar-body"">
                                <div class=""appnavbar-body-title"">
                                    ");
                WriteLiteral(@"<!-- Sidebar Header Dropdown Start -->
                                    <div class=""dropdown mr-2"">
                                        <!-- Dropdown Button Start -->
                                        <button class=""btn btn-outline-default dropdown-toggle"" type=""button""
                                                data-tasks-filter-list="""" data-toggle=""dropdown"" aria-haspopup=""true""
                                                aria-expanded=""false"">
                                            All Tasks
                                        </button>
                                        <!-- Dropdown Button End -->
                                        <!-- Dropdown Menu Start -->
                                        <div class=""dropdown-menu"">
                                            <a class=""dropdown-item"" data-task-filter="""" data-select=""all-tasks""
                                               href=""#"">All Tasks</a>
                                            <");
                WriteLiteral(@"a class=""dropdown-item"" data-task-filter="""" data-select=""active""
                                               href=""#"">Active</a>
                                            <a class=""dropdown-item"" data-task-filter="""" data-select=""finished""
                                               href=""#"">Finished</a>
                                        </div>
                                        <!-- Dropdown Menu End -->
                                    </div>
                                    <!-- Sidebar Header Dropdown End -->
                                    <!-- Sidebar Search Start -->
                                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a672416", async() => {
                    WriteLiteral(@"
                                        <div class=""input-group"">
                                            <input type=""text""
                                                   class=""form-control search border-right-0 transparent-bg pr-0""
                                                   placeholder=""Search notes..."">
                                            <div class=""input-group-append"">
                                                <div class=""input-group-text transparent-bg border-left-0""
                                                     role=""button"">
                                                    <!-- Default :: Inline SVG -->
                                                    <svg class=""text-muted hw-20"" fill=""none"" viewBox=""0 0 24 24""
                                                         stroke=""currentColor"">
                                                        <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                ");
                    WriteLiteral(@"              stroke-width=""2""
                                                              d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z""></path>
                                                    </svg>

                                                    <!-- Alternate :: External File link -->
                                                    <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/search.svg"" alt=""""> -->
                                                </div>
                                            </div>
                                        </div>
                                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    <!-- Sidebar Search End -->
                                </div>

                                <div class=""todo-container"">

                                    <div class=""todo-title"">
                                        <h6 class=""mb-0"">20/07/2020</h6>
                                        <p class=""text-muted"">6 Task remaining</p>
                                    </div>

                                    <div class=""card"">
                                        <div class=""card-body"">
                                            <ul class=""todo-list"">
                                                <li class=""todo-item todo-task-done"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck1"" checked>
           ");
                WriteLiteral(@"                                             <label class=""custom-control-label""
                                                               for=""customCheck1"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Dinner with friends
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck2"">
                                                        <label class=""custom-control-label""
                ");
                WriteLiteral(@"                                               for=""customCheck2"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Watching movie at 10:30PM
                                                    </h6>
                                                </li>
                                                <li class=""todo-item todo-task-done"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck3"" checked>
                                                        <label class=""custom-control-label""
                                                               for=""customCheck3"">&nb");
                WriteLiteral(@"sp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Watching a football match
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck4"">
                                                        <label class=""custom-control-label""
                                                               for=""customCheck4"">&nbsp;</label>
                                                    </div>
                   ");
                WriteLiteral(@"                                 <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Coffie with girlfriend
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck5"">
                                                        <label class=""custom-control-label""
                                                               for=""customCheck5"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskM");
                WriteLiteral(@"odal"">
                                                        Meeting with design team
                                                    </h6>
                                                </li>




                                            </ul>
                                        </div>
                                    </div>

                                    <div class=""todo-title mt-2"">
                                        <h6 class=""mb-0"">21/07/2020</h6>
                                        <p class=""text-muted"">6 Task remaining</p>
                                    </div>

                                    <div class=""card"">
                                        <div class=""card-body"">
                                            <ul class=""todo-list"">
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                     ");
                WriteLiteral(@"                   <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck6"">
                                                        <label class=""custom-control-label""
                                                               for=""customCheck6"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Dinner with friends
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                          ");
                WriteLiteral(@"                                     id=""customCheck7"">
                                                        <label class=""custom-control-label""
                                                               for=""customCheck7"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Watching movie at 10:30PM
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck8"">
                                   ");
                WriteLiteral(@"                     <label class=""custom-control-label""
                                                               for=""customCheck8"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Watching a football match
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck9"">
                                                        <label class=""custom-control-label""
                                  ");
                WriteLiteral(@"                             for=""customCheck9"">&nbsp;</label>
                                                    </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Coffie with girlfriend
                                                    </h6>
                                                </li>
                                                <li class=""todo-item"">
                                                    <div class=""custom-control custom-checkbox"">
                                                        <input type=""checkbox"" class=""custom-control-input""
                                                               id=""customCheck10"">
                                                        <label class=""custom-control-label""
                                                               for=""customCheck10"">&nbsp;</label>
                             ");
                WriteLiteral(@"                       </div>
                                                    <h6 class=""todo-title"" data-toggle=""modal"" data-target=""#taskModal"">
                                                        Meeting with design team
                                                    </h6>
                                                </li>




                                            </ul>
                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div class=""appnavbar-footer"">
                                <div class=""btn btn-primary btn-block"" role=""button"" data-toggle=""modal""
                                     data-target=""#addTaskModal"">Add new task</div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class=""tab-pane h-100"" id=""quick-settings"" role=""t");
                WriteLiteral(@"abpanel"" aria-labelledby=""quick-settings-tab"">
                    <div class=""appnavbar-content-wrapper"">
                        <div class=""appnavbar-scrollable-wrapper"">
                            <div class=""appnavbar-heading sticky-top"">
                                <ul class=""nav justify-content-between align-items-center"">
                                    <!-- Sidebar Title Start -->
                                    <li class=""text-center"">
                                        <h5 class=""text-truncate mb-0"">Settings</h5>
                                    </li>
                                    <!-- Sidebar Title End -->
                                    <!-- Close Sidebar Start -->
                                    <li class=""nav-item list-inline-item"">
                                        <div data-appcontent-close="""">
                                            <!-- Default :: Inline SVG -->
                                            <svg class=""hw-22"" fill=""no");
                WriteLiteral(@"ne"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                                <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                                      d=""M6 18L18 6M6 6l12 12""></path>
                                            </svg>

                                            <!-- Alternate :: External File link -->
                                            <!-- <img class=""injectable hw-22"" src=""./../assets/media/heroicons/outline/x.svg"" alt=""""> -->

                                        </div>
                                    </li>
                                    <!-- Close Sidebar End -->
                                </ul>
                            </div>

                            <div class=""appnavbar-body"">
                                <div class=""settings-container"">
                                    <ul class=""list-group border list-group-flush"">
                                        <li cl");
                WriteLiteral(@"ass=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Last seen</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch1""");
                BeginWriteAttribute("checked", " checked=\"", 61290, "\"", 61300, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label""
                                                           for=""quickSettingSwitch1"">&nbsp;</label>
                                                </div>
                                            </div>
                                        </li>
                                        <li class=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Read receipts</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch2""");
                BeginWriteAttribute("checked", " checked=\"", 62310, "\"", 62320, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label""
                                                           for=""quickSettingSwitch2"">&nbsp;</label>
                                                </div>
                                            </div>
                                        </li>
                                        <li class=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Media auto download</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch3""");
                BeginWriteAttribute("checked", " checked=\"", 63336, "\"", 63346, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label""
                                                           for=""quickSettingSwitch3"">&nbsp;</label>
                                                </div>
                                            </div>
                                        </li>
                                        <li class=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Notifications</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch4""");
                BeginWriteAttribute("checked", " checked=\"", 64356, "\"", 64366, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label""
                                                           for=""quickSettingSwitch4"">&nbsp;</label>
                                                </div>
                                            </div>
                                        </li>
                                        <li class=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Auto backup</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch5""");
                BeginWriteAttribute("checked", " checked=\"", 65374, "\"", 65384, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label""
                                                           for=""quickSettingSwitch5"">&nbsp;</label>
                                                </div>
                                            </div>
                                        </li>
                                        <li class=""list-group-item py-2"">
                                            <div class=""media align-items-center"">
                                                <div class=""media-body"">
                                                    <p class=""mb-0"">Screen Lock</p>
                                                </div>
                                                <div class=""custom-control custom-switch ml-2"">
                                                    <input type=""checkbox"" class=""custom-control-input""
                                                           id=""quickSettingSwitch6"">
              ");
                WriteLiteral(@"                                      <label class=""custom-control-label""
                                                           for=""quickSettingSwitch6"">&nbsp;</label>

                                                </div>
                                            </div>
                                        </li>

                                    </ul>
                                </div>
                            </div>

                            <div class=""appnavbar-footer"">
                                <div class=""btn btn-primary btn-block"">Save settings</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- App Add-ons End -->

        <div class=""backdrop""></div>

        <!-- All Modals Start -->
        <!-- Modal 1 :: Start a Conversation-->
        <div class=""modal modal-lg-fullscreen fade"" id=""startConversation"" tabindex=""-1"" role=""dialo");
                WriteLiteral(@"g""
             aria-labelledby=""startConversationLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""startConversationLabel"">New Chat</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body p-0 hide-scrollbar"">
                        <div class=""row"">
                            <div class=""col-12"">
                                <!-- Search Start -->
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a698200", async() => {
                    WriteLiteral(@"
                                    <div class=""input-group w-100 bg-light"">
                                        <input type=""text""
                                               class=""form-control form-control-md search border-right-0 transparent-bg pr-0""
                                               placeholder=""Search..."">
                                        <div class=""input-group-append"">
                                            <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                    ");
                    WriteLiteral(@"      d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/search.svg"" alt=""""> -->
                                            </div>
                                        </div>
                                    </div>
                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_16);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <!-- Search End -->
                            </div>

                            <div class=""col-12"">
                                <!-- List Group Start -->
                                <ul class=""list-group list-group-flush"">

                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-online mr-2"">
                                                <img src=""../assets/media/avatar/1.png""");
                BeginWriteAttribute("alt", " alt=\"", 70536, "\"", 70542, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Catherine Richardson</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Online</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-online mr-2"">
                                                <img src=""../assets/media/avata");
                WriteLiteral("r/2.png\"");
                BeginWriteAttribute("alt", " alt=\"", 71575, "\"", 71581, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Katherine Schneider</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Online</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-offline mr-2"">
                                                <img src=""../assets/media/avata");
                WriteLiteral("r/3.png\"");
                BeginWriteAttribute("alt", " alt=\"", 72614, "\"", 72620, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Brittany K. Williams</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Offline</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-busy mr-2"">
                                                <img src=""../assets/media/avatar");
                WriteLiteral("/4.png\"");
                BeginWriteAttribute("alt", " alt=\"", 73652, "\"", 73658, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>
                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">
                                                        Christina
                                                        Turner
                                                    </a>
                                                </h6>
                                                <p class=""text-muted mb-0"">Busy</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
     ");
                WriteLiteral("                                       <div class=\"avatar avatar-away mr-2\">\r\n                                                <img src=\"../assets/media/avatar/5.png\"");
                BeginWriteAttribute("alt", " alt=\"", 74848, "\"", 74854, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">
                                                        Annie
                                                        Richardson
                                                    </a>
                                                </h6>
                                                <p class=""text-muted mb-0"">Away</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->

                                </ul>
                                <!-- List Group End -->
                            </div>
                        </div>
                    </div>
    ");
                WriteLiteral(@"            </div>
            </div>
        </div>

        <!-- Modal 2 :: Create Group -->
        <div class=""modal modal-lg-fullscreen fade"" id=""createGroup"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""createGroupLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title js-title-step"" id=""createGroupLabel"">&nbsp;</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body py-0 hide-scrollbar"">
                        <div class=""row hide pt-2"" data-step=""1"" data-title=""Create a New Group"">

                            <div class=""col-12"">
            ");
                WriteLiteral(@"                    <div class=""form-group"">
                                    <label for=""groupName"">Group name</label>
                                    <input type=""text"" class=""form-control form-control-md"" id=""groupName""
                                           placeholder=""Type group name here"">
                                </div>
                            </div>
                            <div class=""col-12"">
                                <div class=""form-group"">
                                    <label>Choose profile picture</label>
                                    <div class=""custom-file"">
                                        <input type=""file"" class=""custom-file-input"" id=""profilePictureInput""
                                               accept=""image/*"">
                                        <label class=""custom-file-label"" for=""profilePictureInput"">Choose file</label>
                                    </div>
                                </div>
        ");
                WriteLiteral(@"                    </div>

                            <div class=""col-12"">
                                <div class=""row"">
                                    <div class=""col-12"">
                                        <div class=""form-group mb-0"">
                                            <label>Group privacy</label>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group rounded p-2 border"">
                                            <div class=""custom-control custom-radio"">
                                                <input class=""form-check-input"" type=""radio"" name=""exampleRadios""
                                                       id=""exampleRadios1"" value=""option1"" checked>
                                                <label class=""form-check-label"" for=""exampleRadios1"">
                                                    ");
                WriteLiteral(@"Public group
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""col"">
                                        <div class=""form-group rounded p-2 border"">
                                            <div class=""custom-control custom-radio"">
                                                <input class=""form-check-input"" type=""radio"" name=""exampleRadios""
                                                       id=""exampleRadios2"" value=""option2"">
                                                <label class=""form-check-label"" for=""exampleRadios2"">
                                                    Private group
                                                </label>
                                            </div>
                                        </div>
                                    </div>
 ");
                WriteLiteral(@"                               </div>
                            </div>

                        </div>

                        <div class=""row hide pt-2"" data-step=""2"" data-title=""Add Group Members"">
                            <div class=""col-12 px-0"">
                                <!-- Search Start -->
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6112918", async() => {
                    WriteLiteral(@"
                                    <div class=""input-group w-100 bg-light"">
                                        <input type=""text""
                                               class=""form-control form-control-md search border-right-0 transparent-bg pr-0""
                                               placeholder=""Search..."">
                                        <div class=""input-group-append"">
                                            <div class=""input-group-text transparent-bg border-left-0"" role=""button"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-20"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                    ");
                    WriteLiteral(@"      d=""M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-20"" src=""./../assets/media/heroicons/outline/search.svg"" alt=""""> -->
                                            </div>
                                        </div>
                                    </div>
                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_17);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <!-- Search End -->
                            </div>

                            <div class=""col-12 px-0"">
                                <!-- List Group Start -->
                                <ul class=""list-group list-group-flush"">

                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-online mr-2"">
                                                <img src=""../assets/media/avatar/1.png""");
                BeginWriteAttribute("alt", " alt=\"", 82594, "\"", 82600, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Catherine Richardson</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Online</p>
                                            </div>

                                            <div class=""media-options"">
                                                <div class=""custom-control custom-checkbox"">
                                                    <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 83381, "\"", 83389, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n                                                           id=\"chx-user-1\"");
                BeginWriteAttribute("checked", " checked=\"", 83466, "\"", 83476, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label"" for=""chx-user-1""></label>
                                                </div>
                                            </div>
                                        </div>
                                        <label class=""media-label"" for=""chx-user-1""></label>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-online mr-2"">
                                                <img src=""../assets/media/avatar/2.png""");
                BeginWriteAttribute("alt", " alt=\"", 84321, "\"", 84327, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Katherine Schneider</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Online</p>
                                            </div>

                                            <div class=""media-options"">
                                                <div class=""custom-control custom-checkbox"">
                                                    <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 85107, "\"", 85115, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n                                                           id=\"chx-user-2\"");
                BeginWriteAttribute("checked", " checked=\"", 85192, "\"", 85202, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label"" for=""chx-user-2""></label>
                                                </div>
                                            </div>
                                        </div>
                                        <label class=""media-label"" for=""chx-user-2""></label>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-offline mr-2"">
                                                <img src=""../assets/media/avatar/3.png""");
                BeginWriteAttribute("alt", " alt=\"", 86048, "\"", 86054, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">Brittany K. Williams</a>
                                                </h6>

                                                <p class=""text-muted mb-0"">Offline</p>
                                            </div>
                                            <div class=""media-options"">
                                                <div class=""custom-control custom-checkbox"">
                                                    <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 86834, "\"", 86842, 0);
                EndWriteAttribute();
                WriteLiteral(@"
                                                           id=""chx-user-3"">
                                                    <label class=""custom-control-label"" for=""chx-user-3""></label>
                                                </div>
                                            </div>
                                        </div>
                                        <label class=""media-label"" for=""chx-user-3""></label>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-busy mr-2"">
                                                <img src=""../assets/media/avatar/4.png""");
                BeginWriteAttribute("alt", " alt=\"", 87761, "\"", 87767, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>
                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">
                                                        Christina
                                                        Turner
                                                    </a>
                                                </h6>
                                                <p class=""text-muted mb-0"">Busy</p>
                                            </div>
                                            <div class=""media-options"">
                                                <div class=""custom-control custom-checkbox"">
                                                    <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 88705, "\"", 88713, 0);
                EndWriteAttribute();
                WriteLiteral("\r\n                                                           id=\"chx-user-4\"");
                BeginWriteAttribute("checked", " checked=\"", 88790, "\"", 88800, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                                    <label class=""custom-control-label"" for=""chx-user-4""></label>
                                                </div>
                                            </div>
                                        </div>
                                        <label class=""media-label"" for=""chx-user-4""></label>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""avatar avatar-away mr-2"">
                                                <img src=""../assets/media/avatar/5.png""");
                BeginWriteAttribute("alt", " alt=\"", 89643, "\"", 89649, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                            </div>

                                            <div class=""media-body"">
                                                <h6 class=""text-truncate"">
                                                    <a href=""#"" class=""text-reset"">
                                                        Annie
                                                        Richardson
                                                    </a>
                                                </h6>
                                                <p class=""text-muted mb-0"">Away</p>
                                            </div>
                                            <div class=""media-options"">
                                                <div class=""custom-control custom-checkbox"">
                                                    <input class=""custom-control-input"" type=""checkbox""");
                BeginWriteAttribute("value", " value=\"", 90589, "\"", 90597, 0);
                EndWriteAttribute();
                WriteLiteral(@"
                                                           id=""chx-user-5"">
                                                    <label class=""custom-control-label"" for=""chx-user-5""></label>
                                                </div>
                                            </div>
                                        </div>
                                        <label class=""media-label"" for=""chx-user-5""></label>
                                    </li>
                                    <!-- List Group Item End -->

                                </ul>
                                <!-- List Group End -->
                            </div>
                        </div>

                        <div class=""row pt-2 h-100 hide"" data-step=""3"" data-title=""Finished"">
                            <div class=""col-12"">
                                <div class=""d-flex justify-content-center align-items-center flex-column h-100"">
                                    <div cla");
                WriteLiteral(@"ss=""btn btn-success btn-icon rounded-circle text-light mb-3"">
                                        <!-- Default :: Inline SVG -->
                                        <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24"" stroke=""currentColor"">
                                            <path stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2""
                                                  d=""M5 13l4 4L19 7"" />
                                        </svg>

                                        <!-- Alternate :: External File link -->
                                        <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/check.svg"" alt=""""> -->
                                    </div>
                                    <h6>Group Created Successfully</h6>
                                    <p class=""text-muted text-center"">
                                        Lorem ipsum dolor sit amet consectetur adipisicing
                                 ");
                WriteLiteral(@"       elit. Dolores cumque laborum fugiat vero pariatur provident!
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-link text-muted js-btn-step mr-auto""
                                data-orientation=""cancel"" data-dismiss=""modal""></button>
                        <button type=""button"" class=""btn btn-secondary  js-btn-step""
                                data-orientation=""previous""></button>
                        <button type=""button"" class=""btn btn-primary js-btn-step"" data-orientation=""next""></button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal 3 :: Invite Others -->
        <div class=""modal modal-lg-fullscreen fade"" id=""inviteOthers"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""invi");
                WriteLiteral(@"teOthersLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""inviteOthersLabel"">Invite Others</h5>

                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body hide-scrollbar"">
                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6130606", async() => {
                    WriteLiteral(@"
                            <div class=""row"">
                                <div class=""col-12"">
                                    <div class=""form-group"">
                                        <label for=""inviteEmailAddress"">Email address</label>
                                        <input type=""email"" class=""form-control form-control-md"" id=""inviteEmailAddress""
                                               placeholder=""Type email address here""");
                    BeginWriteAttribute("value", " value=\"", 94787, "\"", 94795, 0);
                    EndWriteAttribute();
                    WriteLiteral(@">
                                    </div>
                                </div>
                                <div class=""col-12"">
                                    <div class=""form-group"">
                                        <label for=""inviteMessage"">Invitation message</label>
                                        <textarea class=""form-control form-control-md no-resize hide-scrollbar""
                                                  id=""inviteMessage"" placeholder=""Write your message here""
                                                  rows=""3""></textarea>
                                    </div>
                                </div>
                            </div>
                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-link text-muted"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-primary"">Send Invitation</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal 4 :: Notifications -->
        <div class=""modal modal-lg-fullscreen fade"" id=""notificationModal"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""notificationModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""notificationModalLabel"">Notifications</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                          ");
                WriteLiteral(@"  <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
                    <div class=""modal-body p-0 hide-scrollbar"">
                        <div class=""row"">

                            <div class=""col-12"">
                                <!-- List Group Start -->
                                <ul class=""list-group list-group-flush  py-2"">

                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                  ");
                WriteLiteral(@"  <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                          d=""M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/user-add.svg"" alt=""""> -->
                                            </div>

                                            <div class=""media-body"">
                                                <h6>
                                                    <a href=""#"">Catherine richardson</a> send you a friend request
                                                </h6>

                                                <p class=""text-muted mb-0"">5 mins ago</p>
");
                WriteLiteral(@"                                            </div>
                                        </div>
                                        <div class=""d-flex justify-content-center mt-2"">
                                            <button type=""button"" class=""btn btn-outline-danger mx-1"">Reject</button>
                                            <button type=""button"" class=""btn btn-primary mx-1"">Accept</button>
                                        </div>

                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                <!-- Default :: Inline SVG -->
                                                <svg c");
                WriteLiteral(@"lass=""hw-24"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                          d=""M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/check-circle.svg"" alt=""""> -->
                                            </div>

                                            <div class=""media-body"">
                                                <h6>
                                                    <a href=""#"">Katelyn Valdez</a> accepted your friend request
             ");
                WriteLiteral(@"                                   </h6>

                                                <p class=""text-muted mb-0"">25 mins ago</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
      ");
                WriteLiteral(@"                                                    stroke-width=""2""
                                                          d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                            </div>

                                            <div class=""media-body"">
                                                <h6>
                                                    <a href=""#"">Eva Walker</a> updated profile picture
                                                </h6>

                                                <p class=""text-muted mb-0"">5 mins ago</p>
   ");
                WriteLiteral(@"                                         </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                                    <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                          d=""M9 12l2 ");
                WriteLiteral(@"2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"" />
                                                </svg>

                                                <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/check-circle.svg"" alt=""""> -->
                                            </div>

                                            <div class=""media-body"">
                                                <h6>
                                                    <a href=""#"">Bonnie Torres</a> accepted your friend request
                                                </h6>

                                                <p class=""text-muted mb-0"">5 mins ago</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->
                               ");
                WriteLiteral(@"     <!-- List Group Item Start -->
                                    <li class=""list-group-item"">
                                        <div class=""media"">
                                            <div class=""btn btn-primary btn-icon rounded-circle text-light mr-2"">
                                                <!-- Default :: Inline SVG -->
                                                <svg class=""hw-24"" fill=""none"" viewBox=""0 0 24 24""
                                                     stroke=""currentColor"">
                                                    <path stroke-linecap=""round"" stroke-linejoin=""round""
                                                          stroke-width=""2""
                                                          d=""M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"" />
                                                </svg>

                            ");
                WriteLiteral(@"                    <!-- Alternate :: External File link -->
                                                <!-- <img class=""injectable hw-24"" src=""./../assets/media/heroicons/outline/photograph.svg"" alt=""""> -->
                                            </div>

                                            <div class=""media-body"">
                                                <h6>
                                                    <a href=""#"">Christopher Garcia</a> updated profile picture
                                                </h6>

                                                <p class=""text-muted mb-0"">5 mins ago</p>
                                            </div>
                                        </div>
                                    </li>
                                    <!-- List Group Item End -->


                                </ul>
                                <!-- List Group End -->
                            </div>
                        </");
                WriteLiteral(@"div>
                    </div>
                    <div class=""modal-footer justify-content-center"">
                        <button type=""button"" class=""btn btn-link text-muted"">Clear all</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal 5 :: Add Note -->
        <div class=""modal modal-lg-fullscreen fade"" id=""addNoteModal"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""addNoteModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""addNoteModalLabel"">Add new note</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
   ");
                WriteLiteral("                 <div class=\"modal-body\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6146357", async() => {
                    WriteLiteral("\r\n                            <div class=\"form-group\">\r\n                                <label for=\"addNoteName\" class=\"col-form-label\">Note title:</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"addNoteName\"");
                    BeginWriteAttribute("value", " value=\"", 108144, "\"", 108152, 0);
                    EndWriteAttribute();
                    WriteLiteral(@"
                                       placeholder=""Add note title here"">
                            </div>
                            <div class=""form-group"">
                                <label for=""addNoteDetails"" class=""col-form-label"">Note details:</label>
                                <textarea class=""form-control hide-scrollbar"" id=""addNoteDetails"" rows=""4""
                                          placeholder=""Add note descriptions""></textarea>
                            </div>
                            <div class=""form-group"">
                                <label class=""col-form-label"">Note tag:</label>
                                <select class=""custom-select font-size-sm shadow-none"">
                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6147845", async() => {
                        WriteLiteral("Personal");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    BeginWriteTagHelperAttribute();
                    __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
                    __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6149290", async() => {
                        WriteLiteral("Important");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_18.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_18);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6150620", async() => {
                        WriteLiteral("Work");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_19.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_19);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6151945", async() => {
                        WriteLiteral("Favourite");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_20.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_20);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                </select>\r\n                            </div>\r\n\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-light border"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-primary"">Add task</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal 6 :: Edit Task -->
        <div class=""modal modal-lg-fullscreen fade"" id=""taskModal"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""taskModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""taskModalLabel"">Edit task</h5>
                        <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
 ");
                WriteLiteral("                       </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6155619", async() => {
                    WriteLiteral(@"
                            <div class=""form-group"">
                                <label for=""editTaskName"" class=""col-form-label"">Task name:</label>
                                <input type=""text"" class=""form-control"" id=""editTaskName"" value=""Dinner with friends""
                                       placeholder=""Add task name here"">
                            </div>
                            <div class=""form-group"">
                                <label for=""editTaskDetails"" class=""col-form-label"">Task details:</label>
                                <textarea class=""form-control hide-scrollbar"" id=""editTaskDetails"" rows=""4""
                                          placeholder=""Add task descriptions"">Lorem ipsum dolor sit, amet consectetur adipisicing elit. Omnis temporibus vel, molestiae nobis dolor aut sapiente. Vero possimus molestias consequatur quod, quo rem autem molestiae, accusantium nemo culpa eos doloremque?
                        </textarea>
                            </");
                    WriteLiteral("div>\r\n                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-light border"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-success"">Finish</button>
                        <button type=""button"" class=""btn btn-primary"">Save</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal 7 :: Add Task -->
        <div class=""modal modal-lg-fullscreen fade"" id=""addTaskModal"" tabindex=""-1"" role=""dialog""
             aria-labelledby=""addTaskModalLabel"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered modal-dialog-scrollable modal-dialog-zoom"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h5 class=""modal-title"" id=""addTaskModalLabel"">Add new task</h5>
                        <button type=""button"" class=""close"" data-dismiss=""moda");
                WriteLiteral("l\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6159380", async() => {
                    WriteLiteral("\r\n                            <div class=\"form-group\">\r\n                                <label for=\"addTaskName\" class=\"col-form-label\">Task name:</label>\r\n                                <input type=\"text\" class=\"form-control\" id=\"addTaskName\"");
                    BeginWriteAttribute("value", " value=\"", 113009, "\"", 113017, 0);
                    EndWriteAttribute();
                    WriteLiteral(@"
                                       placeholder=""Add task name here"">
                            </div>
                            <div class=""form-group"">
                                <label for=""addTaskDetails"" class=""col-form-label"">Task details:</label>
                                <textarea class=""form-control hide-scrollbar"" id=""addTaskDetails"" rows=""4""
                                          placeholder=""Add task descriptions""></textarea>
                            </div>
                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                    </div>
                    <div class=""modal-footer"">
                        <button type=""button"" class=""btn btn-light border"" data-dismiss=""modal"">Close</button>
                        <button type=""button"" class=""btn btn-primary"">Add task</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- All Modals End -->

    </div>
    <!-- Main Layout End -->
    <!-- Javascript Files -->
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6162143", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_21);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6163245", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_22);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6164347", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_23);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6165449", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_24);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6166551", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_25);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "328e49ff40bafe312dd9c54d8fcb15e043c255a6167653", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_26);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n    ");
#nullable restore
#line 1670 "C:\Users\Hasan Hasanbayli\Desktop\Chat\Chat\Views\Shared\_Layout.cshtml"
Write(RenderSection("Scripts", required: false));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
